import"./jsx-runtime.e92fe57f.js";import{c as e,A as x,C as h,S as v,M as B,a as P}from"./Props.6dcc4647.js";import"./iframe.9f7d92e6.js";import{a as T}from"./colors.f20a4d92.js";import{A as C,o as m,a as g,b as n,n as w,t as S,g as N,x as A}from"./vue.esm-bundler.3f4907d5.js";import{_ as M}from"./_plugin-vue_export-helper.cdc0426e.js";import"./string.20804f82.js";import"./es.map.constructor.a5cd5795.js";import"./es.number.to-fixed.34b4d69d.js";const l={props:{variant:{type:String,default:"green"},percentage:{type:Number,default:0,required:!0},showText:{type:Boolean,default:!1,required:!1},textAside:{type:Boolean,default:!1}},methods:{colorHexCode:T},computed:{formatedPercentage(){return`${parseInt(this.percentage*100,10)}%`},progressIndicatorStyle(){return{"--width":this.formatedPercentage,"--indicatorColor":this.colorHexCode(this.variant),"--leftMargin":this.textAside?"3":"10","--bottomMargin":this.textAside?"10":"2"}},textDirection(){return this.textAside?"row-reverse":"column"}}},f=()=>{C(r=>({20108467:r.textDirection}))},_=l.setup;l.setup=_?(r,a)=>(f(),_(r,a)):f;const y=l,D={id:"progressBar"},q={class:"bar"},V={class:"bar__content"};function j(r,a,t,o,I,u){return m(),g("span",D,[n("div",q,[t.showText?(m(),g("span",{key:0,class:w(t.textAside?"bar__text--aside":"bar__text")},S(u.formatedPercentage),3)):N("",!0),n("div",V,[n("div",{class:"bar__indicator",style:A(u.progressIndicatorStyle)},null,4)])])])}const p=M(y,[["render",j]]);y.__docgenInfo={exportName:"default",displayName:"ProgressBar",description:"",tags:{},props:[{name:"variant",description:`A variante de cor. S\xE3o 9 variantes implementadas: 'green', 'teal',
'blue', 'indigo', 'violet', 'pink', 'red', 'orange' e 'amber'.`,type:{name:"string"},defaultValue:{func:!1,value:"'green'"}},{name:"percentage",description:"Define o indicador de progresso da ProgressBar.",type:{name:"number"},required:!0,defaultValue:{func:!1,value:"0"}},{name:"showText",description:"Define se a porcentagem vai ser mostrada.",type:{name:"boolean"},required:!1,defaultValue:{func:!1,value:"false"}},{name:"textAside",description:"Quando true, disp\xF5e o texto \xE0 direita.",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}]};function i(){return i=Object.assign?Object.assign.bind():function(r){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(r[o]=t[o])}return r},i.apply(this,arguments)}const d=r=>({components:{CdsProgressBar:p},setup(){return{args:r}},template:'<cds-progress-bar v-bind="args"/>'}),F={Template:d},O="wrapper";function b({components:r,...a}){return e(O,i({},F,a,{components:r,mdxType:"MDXLayout"}),e(B,{title:"Componentes/Display/ProgressBar",component:p,argTypes:{variant:{control:{type:"select",options:["turquoise","green","blue","indigo","violet","pink","red","orange","amber","gray"]}},percentage:{control:{type:"range",min:0,max:1,step:.01}}},parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}},docs:{source:{language:"html",format:!0,code:`<cds-progress-bar
	showText
	:percentage="0.5"
/>`}}},mdxType:"Meta"}),e("h1",null,"ProgressBar"),e("h3",null,"ProgressBars s\xE3o componentes utilizados para indicar o status e progresso de algo aos usu\xE1rios."),e("hr",null),e("br",null),e("h2",null,"Recomendamos o uso de ProgressBrs quando:"),e("ul",null,e("li",{parentName:"ul"},"For necess\xE1rio transmitir a ideia do progresso de algo."),e("li",{parentName:"ul"},"For necess\xE1rio transmitir a ideia do status de algo."),e("li",{parentName:"ul"},"Se deseja chamar a aten\xE7\xE3o do usu\xE1rio para uma informa\xE7\xE3o espec\xEDfica de maneira gr\xE1fica.")),e("br",null),e("h2",null,"N\xE3o Recomendamos o uso de ProgressBrs quando:"),e("ul",null,e("li",{parentName:"ul"},"For necess\xE1rio criar loaders."),e("li",{parentName:"ul"},"For necess\xE1ria muita precis\xE3o ao mostrar os n\xFAmeros ou progresso."),e("li",{parentName:"ul"},"For necess\xE1rio criar steppers.")),e("br",null),e("h2",null,"Preview"),e(h,{mdxType:"Canvas"},e(v,{name:"Progress bar",args:{percentage:.5,showText:!0},mdxType:"Story"},d.bind({}))),e(P,{story:"Progress bar",mdxType:"ArgsTable"}))}b.isMDXComponent=!0;const c=d.bind({});c.storyName="Progress bar";c.args={percentage:.5,showText:!0};c.parameters={storySource:{source:`args => ({
  components: {
    CdsProgressBar: ProgressBar
  },

  setup() {
    return {
      args
    };
  },

  template:
  /*html*/
  \`<cds-progress-bar v-bind="args"/>\`
})`}};const s={title:"Componentes/Display/ProgressBar",parameters:{viewMode:"docs",previewTabs:{canvas:{hidden:!0}},docs:{source:{language:"html",format:!0,code:`<cds-progress-bar
	showText
	:percentage="0.5"
/>`}}},component:p,argTypes:{variant:{control:{type:"select",options:["turquoise","green","blue","indigo","violet","pink","red","orange","amber","gray"]}},percentage:{control:{type:"range",min:0,max:1,step:.01}}},includeStories:["progressBar"]},k={"Progress bar":"progressBar"};s.parameters=s.parameters||{};s.parameters.docs={...s.parameters.docs||{},page:()=>e(x,{mdxStoryNameToKey:k,mdxComponentAnnotations:s},e(b,null))};const G=["Template","progressBar"];export{d as Template,G as __namedExportsOrder,s as default,c as progressBar};
//# sourceMappingURL=ProgressBar.stories.a9e80719.js.map
